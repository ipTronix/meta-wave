diff --git a/drivers/crypto/caam/intern.h b/drivers/crypto/caam/intern.h
index d544e69..384f6eb 100644
--- a/drivers/crypto/caam/intern.h
+++ b/drivers/crypto/caam/intern.h
@@ -13,7 +13,7 @@
 #define JOBR_ASSIGNED 1
 
 /* Default clock/sample settings for an RNG4 entropy source */
-#define RNG4_ENT_CLOCKS_SAMPLE 1600
+#define RNG4_ENT_CLOCKS_SAMPLE 6400
 
 /* Currently comes from Kconfig param as a ^2 (driver-required) */
 #define JOBR_DEPTH (1 << CONFIG_CRYPTO_DEV_FSL_CAAM_RINGSIZE)
diff --git a/drivers/video/mxc/mxc_hdmi.c b/drivers/video/mxc/mxc_hdmi.c
index e510025..8936ad8 100644
--- a/drivers/video/mxc/mxc_hdmi.c
+++ b/drivers/video/mxc/mxc_hdmi.c
@@ -1267,8 +1267,8 @@ static void mxc_hdmi_phy_init(struct mxc_hdmi *hdmi)
 			|| (hdmi->blank != FB_BLANK_UNBLANK))
 		return;
 
-	if (!hdmi->hdmi_data.video_mode.mDVI)
-		hdmi_enable_overflow_interrupts();
+//	if (!hdmi->hdmi_data.video_mode.mDVI)
+//		hdmi_enable_overflow_interrupts();
 
 	/*check csc whether needed activated in HDMI mode */
 	cscon = (isColorSpaceConversion(hdmi) &&
@@ -1285,6 +1285,9 @@ static void mxc_hdmi_phy_init(struct mxc_hdmi *hdmi)
 		hdmi_phy_configure(hdmi, 0, 8, cscon);
 	}
 
+        if (!hdmi->hdmi_data.video_mode.mDVI)
+                hdmi_enable_overflow_interrupts();
+
 	hdmi->phy_enabled = true;
 }
 
@@ -1577,10 +1580,14 @@ static int mxc_edid_read_internal(struct mxc_hdmi *hdmi, unsigned char *edid,
 	memset(&fbi->monspecs, 0, sizeof(fbi->monspecs));
 	fb_edid_to_monspecs(edid, &fbi->monspecs);
 
-	ret = mxc_edid_parse_ext_blk(edid + EDID_LENGTH,
-			cfg, &fbi->monspecs);
-	if (ret < 0)
-		return -ENOENT;
+	/* edid extension block parsing */
+	if (extblknum>0)
+	{
+		ret = mxc_edid_parse_ext_blk(edid + EDID_LENGTH,
+				cfg, &fbi->monspecs);
+		if (ret < 0)
+			return -ENOENT;
+	}
 
 	/* need read segment block? */
 	if (extblknum > 1) {
@@ -1795,12 +1802,13 @@ static void mxc_hdmi_edid_rebuild_modelist(struct mxc_hdmi *hdmi)
 		/*
 		 * We might check here if mode is supported by HDMI.
 		 * We do not currently support interlaced modes.
-		 * And add CEA modes in the modelist.
 		 */
 		mode = &hdmi->fbi->monspecs.modedb[i];
 
 		if (!(mode->vmode & FB_VMODE_INTERLACED) &&
-				(mxc_edid_mode_to_vic(mode) != 0)) {
+				mode->xres <= 1920 &&
+				mode->yres <= 1080 &&
+				mode->flag & FB_MODE_IS_STANDARD) {
 
 			dev_dbg(&hdmi->pdev->dev, "Added mode %d:", i);
 			dev_dbg(&hdmi->pdev->dev,
